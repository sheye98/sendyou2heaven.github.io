<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vim使用</title>
      <link href="/2023/03/28/%E6%9C%8D%E5%8A%A1%E5%99%A8/vim%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/03/28/%E6%9C%8D%E5%8A%A1%E5%99%A8/vim%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="vim指令总结"><a href="#vim指令总结" class="headerlink" title="vim指令总结"></a>vim指令总结</h1><ul><li>o 或 O 在当前行之后或之前开新行进入插入模式</li><li>i 或 a 在光标之前或之后进入插入模式</li><li>: 进入命令模式</li><li>esc 退出其它模式返回普通模式</li><li>w 或 e 以单词为单位后移</li><li>b 以单词为单位前移</li><li>k, j, h, l, 分别对应 上，下，左，右</li><li>]] 跳转到紧挨着当前函数的下一个函数</li><li>[[ 跳转到当前函数头，或者跳转到上一个函数（如果已经停在当前函数头）</li><li>% 查找当前括号的成对匹配符号</li><li>&#x3D; 格式化当前选择区域，&#x3D;&#x3D; 格式化当前行</li><li>y 复制，p 粘贴，d 删除选区， x 删除单个字符</li><li>J 将下一行与当前行合并</li><li>r 修改光标处字符，cw，修改光标处单词。</li><li>&lt;&lt; 降低当前行或当前选区的缩进级别</li><li>&#x2F;&gt;&gt; 提升当前行或当前选区的缩进级别</li><li>&#x2F; 搜索，s 替换</li><li>查找当前光标处的标识符，n 查找下一个，N 查找上一个</li><li>. 重复上一次操作</li><li>qq 开始一个以q为名的宏定义录制，q 结束</li><li>@q 播放以q为名的宏，@@ 播放上一次播放的宏</li><li>~ 切换光标处所在字符的大小写</li><li>0 跳转到行首 $ 跳转到行尾 ^ 跳转到行首第一个非白字符</li><li>666G 跳转到第666行。</li><li>v 进入选择模式进行选区选择。</li><li>d(数字) 删除当前行下的几行</li><li>u 撤回</li><li>dd 剪切、3dd剪切3行</li><li>V 进入可视模式，按y进行剪切</li></ul><h1 id="1-vim不同模式"><a href="#1-vim不同模式" class="headerlink" title="1.vim不同模式"></a>1.vim不同模式</h1><p>普通模式→插入模式</p><p><img src="/" alt="Untitled"></p><p>插入模式 → 普通模式</p><p><img src="/image.png" alt="Untitled"></p><p>普通模式 → 可视模式</p><p>v → 进入或退出可视模式</p><p>普通模式 → 命令模式</p><p><img src="https://file.notion.so/f/s/e616fd87-f22d-4e0b-ba13-d38f2656a1b3/Untitled.png?id=302b9074-08d9-40aa-ab4b-46440606ecde&table=block&spaceId=48182349-5b5a-4320-af06-289b164147f7&expirationTimestamp=1680159575074&signature=dXrs8FynTyyK12mPReqJjZxTZkgTYH7ZP66LycCE7Ko&downloadName=Untitled.png" alt="Untitled"></p><h1 id="2-光标移动"><a href="#2-光标移动" class="headerlink" title="2.光标移动"></a>2.光标移动</h1><p><strong>以字母为单位</strong></p><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/687529a0-86ec-4efb-88a7-e641302c0c28/Untitled.png" alt="Untitled"></p><p><strong>以单词为单位</strong></p><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/17e51b4e-53dc-4213-a56c-22d8a77d6809/Untitled.png" alt="Untitled"></p><p>w → 下一个单词的开头</p><p><strong>以行为单位</strong></p><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/10b8685f-bdaa-4db2-b8a4-c3f1dad84135/Untitled.png" alt="Untitled"></p><p>以单词为单位查找</p><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/70001275-1f67-46b2-97df-2f3c7d5d5798/Untitled.png" alt="Untitled"></p><p>fe → 查找下一个字</p><h1 id="3-操作符"><a href="#3-操作符" class="headerlink" title="3.操作符"></a>3.操作符</h1><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/08797c54-159f-4a25-9ca5-08c67d00688c/Untitled.png" alt="Untitled"></p><h1 id="4-动作"><a href="#4-动作" class="headerlink" title="4.动作"></a>4.动作</h1><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d9fdccd7-83df-47b6-a438-4f22f95602d4/Untitled.png" alt="Untitled"></p><p>s → surroud</p><p>ds” → 删除双引号</p><p>ysiw” → 添加双引号</p><p>ciw → 修改单词</p><p>yiw → 复制单词</p><p>ci&lt; &#x2F; ciw → 修改&lt;内的单词</p><p>diw &#x2F; di&lt; → 删除&lt;内的单词</p><p>da&lt; → 删除包括尖角号内的内容</p><p>di{ &#x2F; diB → 删除大括号内的内容(b代表小括号，B代表大括号)</p><p>2dd →删除两行</p><p>2yy → 复制两行</p><p>2cc →修改两行</p><p>dfs → 找到s并删除</p><p>d^ → 从光标处删到开头</p><p>d$ → 从光标处删到结尾</p><p>die → 删除整个文件(e→entiry )</p><p>cie → 修改整个文件</p><p>dig → 删除tag内的内容(t→tag，html中的tag)</p><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/03197075-1c31-48bc-af1c-125a6d600108/Untitled.png" alt="Untitled"></p><h1 id="5-TIP"><a href="#5-TIP" class="headerlink" title="5.TIP"></a>5.TIP</h1><p>gd → 查看函数使用(go to destination)</p><p>^o → 返回上一个方法</p><p>gh → 显示完整函数(go to hover鼠标悬浮)</p><p>gt → 切换下一个不同go文件</p><p>gT → 切换上一个go文件</p><p>4gt → 跳到第二个标签页</p><p>command1 → 跳到侧边栏</p><p>esc →跳出侧边栏</p><p>][ → 用来跳到光标后面的一个函数结尾处。如果光标在函数体内的话，那就是所在函数的结尾处</p><p>[] → 用来跳到光标前面的一个函数结尾处。如果光标在函数体内的话，那就是上一个函数的结尾处</p><p>[{ → 跳到函数头 </p><p>]} → 跳到函数尾</p><h1 id="vim自用热键方案"><a href="#vim自用热键方案" class="headerlink" title="vim自用热键方案"></a>vim自用热键方案</h1><h2 id="mac平台"><a href="#mac平台" class="headerlink" title="mac平台"></a>mac平台</h2><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul><li><p>非代码编辑区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">cmd + g c ： 显示命令面板</span><br><span class="line">cmd + g s ： 打开设置页面</span><br><span class="line">cmd + g k ： 打开热键映射</span><br><span class="line">cmd + g m ： 打开一个目录</span><br><span class="line">cmd + g f ： 打开一个文件</span><br><span class="line">cmd + g h ： 打开最近记录</span><br><span class="line">cmd + g n ： 新建vscode实例</span><br><span class="line">cmd + g q ： 关闭vscode示例</span><br><span class="line">​</span><br><span class="line">cmd + f n ： 新建文件</span><br><span class="line">cmd + f o ： 打开文件</span><br><span class="line">cmd + f e ： 另存为文件</span><br><span class="line">cmd + f s ： 保存文件</span><br><span class="line">cmd + f w ： 保存所有文件</span><br><span class="line">cmd + f q ： 关闭文件</span><br><span class="line">cmd + f a ： 关闭所有文件</span><br><span class="line">​</span><br><span class="line">cmd + n [ ： 切换侧边栏显示状态</span><br><span class="line">cmd + n 1 ： 显示文件资源管理器</span><br><span class="line">cmd + n 2 ： 显示TODO Tree</span><br><span class="line">cmd + n 3 ： 显示全局搜索</span><br><span class="line">cmd + n 4 ： 显示debug</span><br><span class="line">cmd + n 5 ： 显示版本控制</span><br><span class="line">cmd + n 6 ： 显示SQL Tools</span><br><span class="line">cmd + n 7 ： 显示Docker</span><br><span class="line">cmd + n 8 ： 显示测试</span><br><span class="line">cmd + n 9 ： 显示插件商店</span><br><span class="line">​</span><br><span class="line">cmd + p ] ： 切换面板显示状态</span><br><span class="line">cmd + p 1 ： 显示问题</span><br><span class="line">cmd + p 2 ： 显示输出</span><br><span class="line">cmd + p 3 ： 显示终端</span><br><span class="line">cmd + p 4 ： 显示调试控制台</span><br><span class="line">cmd + p 5 ： 显示SQL CONSOLE</span><br></pre></td></tr></table></figure></li><li><p>代码编辑区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cmd + q ：关闭当前选项卡或分屏</span><br><span class="line"> cmd + e ：聚焦在第一个选项卡中</span><br><span class="line"> cmd + , ：切换到上一个选项卡</span><br><span class="line"> cmd + . ：切换到下一个选项卡</span><br><span class="line"> ​</span><br><span class="line"> cmd + w s ：拆分一个上下分屏</span><br><span class="line"> cmd + w v ：拆分一个左右分屏</span><br><span class="line"> ​</span><br><span class="line"> cmd + w k ：将光标向上移动1屏</span><br><span class="line"> cmd + w j ：将光标向下移动1屏</span><br><span class="line"> ​</span><br><span class="line"> cmd + w h ：将光标向左移动1屏</span><br><span class="line"> cmd + w l ：将光标向右移动1屏</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>代码控制区</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cmd + h ： 触发帮助提示</span><br><span class="line">cmd + j ： 触发参数提示</span><br><span class="line">cmd + k ： 触发建议提示</span><br><span class="line">cmd + n ： 移动到下一个建议</span><br><span class="line">cmd + p ： 移动到上一个建议</span><br><span class="line">tab ： 选择下一个建议</span><br><span class="line">enter ： 选择当前建议</span><br><span class="line">​</span><br><span class="line">cmd + alt + l ： 格式化代码（个人习惯）</span><br><span class="line">​</span><br><span class="line">cmd + = ： 放大字体</span><br><span class="line">cmd + - ： 缩小字体</span><br><span class="line"></span><br><span class="line">jj ： 退出INSERT模式</span><br><span class="line">zz ： 切换代码折叠（原生vim的zz不是切换折叠）</span><br><span class="line">​</span><br><span class="line">H ：跳转行首、取代^</span><br><span class="line">L ：跳转行尾、取代$</span><br><span class="line">​</span><br><span class="line">g[ ： 跳转到上一个问题</span><br><span class="line">g] ： 跳转到下一个问题</span><br></pre></td></tr></table></figure><h3 id="vscode-配置"><a href="#vscode-配置" class="headerlink" title="vscode 配置"></a>vscode 配置</h3><p>另外还有一些指令例如在非视图模式下无法进行全选、复制、粘贴等功能</p></li></ul><p>附vscode中keybinding.json的配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br></pre></td><td class="code"><pre><span class="line">// 将键绑定放在此文件中以覆盖默认值</span><br><span class="line">[</span><br><span class="line">    // --- 全局命令</span><br><span class="line">    // 显示命令面板</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g c&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.showCommands&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 打开设置页面</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g s&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.openSettings&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 打开热键映射</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g k&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.openGlobalKeybindings&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 打开一个目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g m&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.files.openFolder&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 打开一个文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g f&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.files.openFile&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 打开最近记录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g h&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.openRecent&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 新建vscode实例</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g n&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.newWindow&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 关闭vscode实例</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+g q&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.closeWindow&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 文件命令</span><br><span class="line">    // 新建文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f n&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;welcome.showNewFileEntries&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    // 打开文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f o&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.files.openFileFolder&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 另存为文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f e&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.files.saveAs&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 保存文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f s&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.files.save&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 保存所有文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f w&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.files.saveAll&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 关闭文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f q&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.closeActiveEditor&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 关闭所有文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+f a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.closeAllEditors&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // -- 侧边栏命令</span><br><span class="line">    // 切换侧边栏显示状态</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n [&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.toggleSidebarVisibility&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示文件资源管理器</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 1&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.files.action.focusFilesExplorer&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示TODO Tree</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 2&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;todo-tree-view.focus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示全局搜索</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 3&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.replaceInFiles&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示debug</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 4&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.debug&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;viewContainer.workbench.view.debug.enabled&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示版本控制</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 5&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.scm&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;workbench.scm.active&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示SQL Tools</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 6&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.extension.sqltoolsActivityBarContainer&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示Docker</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 7&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.extension.dockerView&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示测试</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 8&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.testing.focus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示插件商店</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n 9&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.extensions&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;viewContainer.workbench.view.extensions.enabled&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 面板命令</span><br><span class="line">    // 切换面板显示状态</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p [&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.togglePanel&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示问题</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p 1&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.panel.markers.view.focus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示输出</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p 2&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.output.toggleOutput&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;workbench.panel.output.active&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示终端</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p 3&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.terminal.toggleTerminal&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;terminal.active&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示调试控制台</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p 4&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.debug.action.toggleRepl&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;workbench.panel.repl.view.active&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 显示SQL CONSOLE</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p 5&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.view.extension.sqltoolsPanelContainer&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 编辑区命令</span><br><span class="line">    // 关闭当前选项卡或分屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+q&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.closeActiveEditor&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 聚集在第一个选项卡中</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+e&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.focusFirstEditorGroup&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 切换到上一个选项卡</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+,&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.previousEditor&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 切换到下一个选项卡</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+.&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.nextEditor&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 拆分一个上下分屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+w s&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.splitEditorDown&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 拆分一个左右分屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+w v&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.splitEditor&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 将光标向上动1屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+w k&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.focusAboveGroup&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 将光标向下动1屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+w j&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.focusBelowGroup&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 将光标向左移动1屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+w h&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.focusLeftGroup&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 将光标向右移动1屏</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+w l&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.action.focusRightGroup&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 代码编辑命令</span><br><span class="line">    // 触发帮助提示</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+h&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.showHover&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 触发参数提示</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+j&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.triggerParameterHints&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorHasSignatureHelpProvider &amp;&amp; editorTextFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+j&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;closeParameterHints&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorFocus &amp;&amp; parameterHintsVisible&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 触发建议提示</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+k&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.triggerSuggest&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorHasCompletionItemProvider &amp;&amp; textInputFocus &amp;&amp; !editorReadonly&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+k&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;hideSuggestWidget&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;suggestWidgetVisible &amp;&amp; textInputFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 移动到下一个建议</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+n&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;selectNextSuggestion&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;suggestWidgetMultipleSuggestions &amp;&amp; suggestWidgetVisible &amp;&amp; textInputFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 移动到上一个建议</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+p&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;selectPrevSuggestion&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;suggestWidgetMultipleSuggestions &amp;&amp; suggestWidgetVisible &amp;&amp; textInputFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 格式化代码</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+alt+l&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.formatDocument&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorHasDocumentFormattingProvider &amp;&amp; editorTextFocus &amp;&amp; !editorReadonly &amp;&amp; !inCompositeEditor&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 放大字体</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+=&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.fontZoomIn&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 缩小字体</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+-&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.fontZoomOut&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- window 用户删除以下重映射，这里是为MAC用户准备的</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+r&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+r&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-r&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+r&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+r&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-r&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+a&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+a&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-a&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+x&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+x&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+x&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+x&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-x&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+u&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+u&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-u&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+u&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+u&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-u&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+d&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+d&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-d&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+d&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+d&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-d&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+i&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+i&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-i&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+i&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+i&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-i&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+o&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;extension.vim_ctrl+o&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-o&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;ctrl+o&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_ctrl+o&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;C-o&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 取消一些vim插件的额外功能</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+a&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;D-a&gt; &amp;&amp; !inDebugRepl &amp;&amp; vim.mode != &#x27;Insert&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;alt+cmd+down&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+alt+down&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;alt+cmd+up&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+alt+up&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+c&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+c&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.overrideCopy &amp;&amp; vim.use&lt;D-c&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+v&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+v&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;D-v&gt; &amp;&amp; vim.mode == &#x27;&#x27;CommandlineInProgress&#x27; !inDebugRepl&#x27; || editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;D-v&gt; &amp;&amp; !inDebugRepl &amp;&amp; vim.mode == &#x27;SearchInProgressMode&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+d&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+d&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;D-d&gt; &amp;&amp; !inDebugRepl&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+left&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+left&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;D-left&gt; &amp;&amp; !inDebugRepl &amp;&amp; vim.mode != &#x27;Insert&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+right&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-extension.vim_cmd+right&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;editorTextFocus &amp;&amp; vim.active &amp;&amp; vim.use&lt;D-right&gt; &amp;&amp; !inDebugRepl &amp;&amp; vim.mode != &#x27;Insert&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 取消或更改一些vscode键位</span><br><span class="line">    // cmd+a全选功能在非INSERT模式下不生效</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;editor.action.selectAll&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;vim.mode != &#x27;Normal&#x27; &amp;&amp; vim.mode != &#x27;Visual&#x27; &amp;&amp; vim.mode != &#x27;VisualLine&#x27; &amp;&amp; vim.mode != &#x27;VisualBlock&#x27; &amp;&amp; vim.mode != &#x27;CommandlineInProgress&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-editor.action.selectAll&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // cmd+c或者cmd+v功能在非INSERT模式下不生效</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+c&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-editor.action.clipboardCopyAction&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+v&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-editor.action.clipboardPasteAction&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+c&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-execCopy&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+c&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;execCopy&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;vim.mode != &#x27;Normal&#x27; &amp;&amp; vim.mode != &#x27;Visual&#x27; &amp;&amp; vim.mode != &#x27;VisualLine&#x27; &amp;&amp; vim.mode != &#x27;VisualBlock&#x27; &amp;&amp; vim.mode != &#x27;CommandlineInProgress&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+v&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;-execPaste&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;cmd+v&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;execPaste&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;vim.mode != &#x27;Normal&#x27; &amp;&amp; vim.mode != &#x27;Visual&#x27; &amp;&amp; vim.mode != &#x27;VisualLine&#x27; &amp;&amp; vim.mode != &#x27;VisualBlock&#x27; &amp;&amp; vim.mode != &#x27;CommandlineInProgress&#x27;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // --- 资源管理器中对文件或目录的操作</span><br><span class="line">    // 新建文件</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;i&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;explorer.newFile&quot;,</span><br><span class="line">        &quot;when&quot;: &quot; explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus &quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 新建目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;o&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;explorer.newFolder&quot;,</span><br><span class="line">        &quot;when&quot;: &quot; explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus &quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 刷新资源管理器</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;r&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;workbench.files.action.refreshFilesExplorer&quot;,</span><br><span class="line">        &quot;when&quot;: &quot; explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus &quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 重命名文件或目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;a&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;renameFile&quot;,</span><br><span class="line">        &quot;when&quot;: &quot; explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus &quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 删除文件或目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;d&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;deleteFile&quot;,</span><br><span class="line">        &quot;when&quot;: &quot; explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus &quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 剪切文件或目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;x&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;filesExplorer.cut&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 复制文件或目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;y&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;filesExplorer.copy&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceIsRoot &amp;&amp; !inputFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 粘贴文件或目录</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;key&quot;: &quot;p&quot;,</span><br><span class="line">        &quot;command&quot;: &quot;filesExplorer.paste&quot;,</span><br><span class="line">        &quot;when&quot;: &quot;explorerViewletVisible &amp;&amp; filesExplorerFocus &amp;&amp; !explorerResourceReadonly &amp;&amp; !inputFocus&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>附vim插件中settings.json配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;explorer.confirmDelete&quot;: false,</span><br><span class="line">    &quot;go.useCodeSnippetsOnFunctionSuggest&quot;: true,</span><br><span class="line">    &quot;security.workspace.trust.untrustedFiles&quot;: &quot;open&quot;,</span><br><span class="line">    &quot;go.toolsManagement.autoUpdate&quot;: true,</span><br><span class="line">    &quot;workbench.iconTheme&quot;: &quot;material-icon-theme&quot;,</span><br><span class="line">    &quot;editor.fontSize&quot;: 15,</span><br><span class="line">    &quot;explorer.confirmDragAndDrop&quot;: false,</span><br><span class="line">    &quot;workbench.startupEditor&quot;: &quot;none&quot;,</span><br><span class="line">    &quot;bracketPairColorizer.depreciation-notice&quot;: false,</span><br><span class="line">    &quot;workbench.colorTheme&quot;: &quot;Visual Studio Dark&quot;,</span><br><span class="line">    &quot;files.autoSave&quot;: &quot;onFocusChange&quot;,</span><br><span class="line">    &quot;[python]&quot;: &#123;</span><br><span class="line">        &quot;editor.formatOnType&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;vim.digraphs&quot;: &#123;</span><br><span class="line">    </span><br><span class="line">    &#125;,</span><br><span class="line">    // 绑定vim前导键</span><br><span class="line">    &quot;vim.leader&quot;: &quot;&lt;space&gt;&quot;,</span><br><span class="line">   // 启用easymotion插件</span><br><span class="line">    &quot;vim.easymotion&quot;: true,</span><br><span class="line">   // 启用系统粘贴板作为vim寄存器</span><br><span class="line">    &quot;vim.useSystemClipboard&quot;: true,</span><br><span class="line">   // 由vim接管ctrl+any的按键，而不是vscode</span><br><span class="line">    &quot;vim.useCtrlKeys&quot;: true,</span><br><span class="line">   // 突出显示与当前搜索匹配的所有文本</span><br><span class="line">    &quot;vim.hlsearch&quot;: true,</span><br><span class="line">    // 普通模式下的非递归按键绑定</span><br><span class="line">    &quot;vim.normalModeKeyBindingsNonRecursive&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;before&quot;: [</span><br><span class="line">                &quot;H&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;after&quot;: [</span><br><span class="line">                &quot;^&quot;</span><br><span class="line">            ]</span><br><span class="line">            &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;before&quot;: [</span><br><span class="line">                &quot;L&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;after&quot;: [</span><br><span class="line">                &quot;$&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;before&quot;: [</span><br><span class="line">                &quot;z&quot;,</span><br><span class="line">                &quot;z&quot;,</span><br><span class="line">            ],</span><br><span class="line">            &quot;commands&quot;: [</span><br><span class="line">                &quot;editor.toggleFold&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;before&quot;: [</span><br><span class="line">                &quot;g&quot;,</span><br><span class="line">                &quot;[&quot;,</span><br><span class="line">            ],</span><br><span class="line">            &quot;commands&quot;: [</span><br><span class="line">                &quot;editor.action.marker.prevInFiles&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;before&quot;: [</span><br><span class="line">                &quot;g&quot;,</span><br><span class="line">                &quot;]&quot;,</span><br><span class="line">            ],</span><br><span class="line">            &quot;commands&quot;: [</span><br><span class="line">                &quot;editor.action.marker.nextInFiles&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">    // 插入模式下的非递归按键绑定</span><br><span class="line">    // 将esc退出插入模式修改为jj退出插入模式</span><br><span class="line">    &quot;vim.insertModeKeyBindings&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;before&quot;: [</span><br><span class="line">                &quot;j&quot;,</span><br><span class="line">                &quot;j&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;after&quot;: [</span><br><span class="line">                &quot;&lt;Esc&gt;&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">    ],</span><br><span class="line">   // 命令模式下的非递归按键绑定</span><br><span class="line">    &quot;vim.commandLineModeKeyBindingsNonRecursive&quot;: [</span><br><span class="line">    </span><br><span class="line">    ],</span><br><span class="line">   // 可视模式下的非递归按键绑定</span><br><span class="line">    &quot;vim.operatorPendingModeKeyBindings&quot;: [],</span><br><span class="line">   // 下面定义的按键将交由vscode进行处理，而不是vscode-vim插件</span><br><span class="line">    &quot;vim.handleKeys&quot;: &#123;</span><br><span class="line">        &quot;&lt;C-a&gt;&quot;: false,</span><br><span class="line">        &quot;&lt;C-f&gt;&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;vim.visualModeKeyBindings&quot;: [</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line">    &quot;vim.statusBarColors.easymotioninputmode&quot;: &quot;&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><h4 id="输入法切换"><a href="#输入法切换" class="headerlink" title="输入法切换"></a>输入法切换</h4><p>如果你在INSERT模式下使用中文输入法进行编辑，当ESC到NORMAL模式下后，它将依然保持中文输入法，这会使我们需要频繁的使用ctrl+shift或者cmd+space进行输入法切换，非常麻烦。</p><p>为了解决这个问题，你必须先在你的计算机上安装一个im-select脚本（根据官方文档来看，貌似只有mac和windows平台下存在这个问题）:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Ls https://raw.githubusercontent.com/daipeihust/im-select/master/install_mac.sh | sh</span><br></pre></td></tr></table></figure><p>这个脚本有2个作用，当你输入im-select后它将获取当前输入法，当你输入im-select xxx后它将切换至xxx输入法。</p><p>首先你需要先切换到英文输入法中到终端执行im-select命令，并把结果保存下来：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">im-select</span></span><br><span class="line"> com.apple.keylayout.ABC</span><br></pre></td></tr></table></figure><p>然后再到settings.json中加入以下配置项即可完成输入法在INSERT模式以及NORMAL模式下的自动切换：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 自动切换输入法</span><br><span class="line">  &quot;vim.autoSwitchInputMethod.enable&quot;: true,</span><br><span class="line">  &quot;vim.autoSwitchInputMethod.defaultIM&quot;: &quot;com.apple.keylayout.ABC&quot;,  // 这里输入你刚刚获得的英文输入法名称</span><br><span class="line">  &quot;vim.autoSwitchInputMethod.obtainIMCmd&quot;: &quot;/usr/local/bin/im-select&quot;,</span><br><span class="line">  &quot;vim.autoSwitchInputMethod.switchIMCmd&quot;: &quot;/usr/local/bin/im-select &#123;im&#125;&quot;</span><br></pre></td></tr></table></figure><p>此文章在<a href="https://zhuanlan.zhihu.com/p/430603620">转载地址</a>的基础上进行添加，并记录vim快捷键的思路，此思路在idea等软件上同样适用</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2023/03/23/%E6%9C%8D%E5%8A%A1%E5%99%A8/git%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/03/23/%E6%9C%8D%E5%8A%A1%E5%99%A8/git%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>切换分支，如果不存在就创建。不加参数b则切换已有的分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b volume_name</span><br></pre></td></tr></table></figure><p>提交修改到缓存区。</p><p>确认提交信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;this is a commit msg&#x27;</span> <span class="comment"># 单次提交</span></span><br></pre></td></tr></table></figure><p>合并提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i 3fad3197 <span class="comment"># 将commit信息以上的进行合并，但不包括3fad3197</span></span><br><span class="line">git rebase --abort <span class="comment"># 废除合并</span></span><br></pre></td></tr></table></figure><p>修改commit具体信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend <span class="comment"># 修改合并的具体信息，比如change_id设置为想要合并的原始chang_id</span></span><br></pre></td></tr></table></figure><p>查看提交日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git <span class="built_in">log</span> <span class="comment">#查看提交日志</span></span><br></pre></td></tr></table></figure><p>出现提交时代码已经更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git fetch <span class="comment"># 拉取最新代码</span></span><br><span class="line">git stash save <span class="comment"># 然后暂存本地修改</span></span><br><span class="line">git rebase origin/master <span class="comment"># 把最新分支合并到当前分支</span></span><br><span class="line">git stash pop <span class="comment"># 恢复本地暂存区代码</span></span><br><span class="line"></span><br><span class="line">其他方案：</span><br><span class="line">git status -s <span class="comment"># 查看仓库状态</span></span><br><span class="line"><span class="comment"># 添加需要提交的文件名（加路径--参考git status 打印出来的文件路径）</span></span><br><span class="line">git add src/components/文件名 </span><br><span class="line">git stash -u -k <span class="comment"># 忽略其他文件，把现修改的隐藏起来，这样提交的时候就不会提交未被add的文件</span></span><br><span class="line">git commit -m <span class="string">&quot;哪里做了修改可写入...&quot;</span></span><br><span class="line">git pull <span class="comment"># 拉取合并</span></span><br><span class="line">git push <span class="comment"># 推送到远程仓库</span></span><br><span class="line">git stash pop <span class="comment"># 恢复之前忽略的文件（非常重要的一步）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他方案：</span></span><br><span class="line"><span class="comment"># 冲突之后会提示head文件，删除header部分注释，然后add，撤回提交，重新提交，git rebase --continue</span></span><br></pre></td></tr></table></figure><p>git stash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://blog.csdn.net/stone_yw/article/details/80795669</span></span><br></pre></td></tr></table></figure><p>撤销上一次提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --soft HEAD^</span><br></pre></td></tr></table></figure><p>连接gerrit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成ssh密钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;3200334@qq.com&quot;</span></span><br><span class="line"><span class="comment"># 查看远程连接的地址</span></span><br><span class="line">git remote -v</span><br><span class="line"><span class="comment"># 添加gerrit连接</span></span><br><span class="line">git remote add gerrit [url]</span><br><span class="line"><span class="comment"># 参考：</span></span><br><span class="line"><span class="comment"># https://stackoverflow.com/questions/19280472/git-review-doesnt-work-but-i-am-able-to-see-my-changes-when-i-do-a-push-what</span></span><br></pre></td></tr></table></figure><p>如果第一次提交没有commit-id</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 出现如下报错：</span></span><br><span class="line"><span class="comment"># WARNING: Could not determine git version. Using modern git rebase</span></span><br><span class="line"><span class="comment"># flags.</span></span><br><span class="line"><span class="comment"># remote: </span></span><br><span class="line"><span class="comment"># remote: Processing changes: refs: 1</span></span><br><span class="line"><span class="comment"># remote: Processing changes: refs: 1, done            </span></span><br><span class="line"><span class="comment"># remote: ERROR: [5eebb2e] missing Change-Id in commit message footer        </span></span><br><span class="line"><span class="comment"># remote: </span></span><br><span class="line"><span class="comment"># remote: Hint: To automatically insert Change-Id, install the hook:        </span></span><br><span class="line"><span class="comment"># remote:   gitdir=$(git rev-parse --git-dir); scp -p -P 29418 sheye@review.ustack.com:hooks/commit-msg $&#123;gitdir&#125;/hooks/        </span></span><br><span class="line"><span class="comment"># remote: And then amend the commit:        </span></span><br><span class="line"><span class="comment"># remote:   git commit --amend        </span></span><br><span class="line"><span class="comment"># remote: </span></span><br><span class="line"><span class="comment"># To ssh://review.ustack.com:29418/ued/silencer.git</span></span><br><span class="line"><span class="comment">#  ! [remote rejected] HEAD -&gt; refs/for/master%topic=repository_test ([5eebb2e] missing Change-Id in commit message footer)</span></span><br><span class="line"><span class="comment"># error: failed to push some refs to &#x27;ssh://review.ustack.com:29418/ued/silencer.git&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决方法：</span></span><br><span class="line">she@shedeMacBook-Air [20:36:44] [~/Desktop/goproject/silencer] [repository_test *]</span><br><span class="line">-&gt; % scp -p -P 29418 sheye@review.ustack.com:hooks/commit-msg .git/hooks/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释：如果之前的提交就没有commit-id，然后再设置的hook，首先回退这次提交（git reset --soft HEAD^）</span></span><br><span class="line"><span class="comment"># ，重新提交hook才会生效。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参考文档：</span></span><br><span class="line"><span class="comment"># https://stackoverflow.com/questions/8845658/gerrit-error-when-change-id-in-commit-messages-are-missing</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 出现如下报错：</span></span><br><span class="line"><span class="comment"># WARNING: Could not determine git version. Using modern git rebase</span></span><br><span class="line"><span class="comment"># flags.</span></span><br><span class="line"><span class="comment"># remote: </span></span><br><span class="line"><span class="comment"># remote: Processing changes: refs: 1</span></span><br><span class="line"><span class="comment"># remote: Processing changes: refs: 1, done            </span></span><br><span class="line"><span class="comment"># remote: ERROR: [5eebb2e] missing Change-Id in commit message footer        </span></span><br><span class="line"><span class="comment"># remote: </span></span><br><span class="line"><span class="comment"># remote: Hint: To automatically insert Change-Id, install the hook:        </span></span><br><span class="line"><span class="comment"># remote:   gitdir=$(git rev-parse --git-dir); scp -p -P 29418 sheye@review.ustack.com:hooks/commit-msg $&#123;gitdir&#125;/hooks/        </span></span><br><span class="line"><span class="comment"># remote: And then amend the commit:        </span></span><br><span class="line"><span class="comment"># remote:   git commit --amend        </span></span><br><span class="line"><span class="comment"># remote: </span></span><br><span class="line"><span class="comment"># To ssh://review.ustack.com:29418/ued/silencer.git</span></span><br><span class="line"><span class="comment">#  ! [remote rejected] HEAD -&gt; refs/for/master%topic=repository_test ([5eebb2e] missing Change-Id in commit message footer)</span></span><br><span class="line"><span class="comment"># error: failed to push some refs to &#x27;ssh://review.ustack.com:29418/ued/silencer.git&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决方法：</span></span><br><span class="line">she@shedeMacBook-Air [20:36:44] [~/Desktop/goproject/silencer] [repository_test *]</span><br><span class="line">-&gt; % scp -p -P 29418 sheye@review.ustack.com:hooks/commit-msg .git/hooks/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释：如果之前的提交就没有commit-id，然后再设置的hook，首先回退这次提交（git reset --soft HEAD^）</span></span><br><span class="line"><span class="comment"># ，重新提交hook才会生效。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参考文档：</span></span><br><span class="line"><span class="comment"># https://stackoverflow.com/questions/8845658/gerrit-error-when-change-id-in-commit-messages-are-missing</span></span><br></pre></td></tr></table></figure><p>解决冲突的几种方案：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.出现以下提示：</span><br><span class="line">WARNING: Could not determine git version. Using modern git rebase</span><br><span class="line">flags.</span><br><span class="line">Errors running git rebase --rebase-merges -i remotes/gerrit/master</span><br><span class="line">Rebasing (1/4)</span><br><span class="line">Rebasing (2/4)</span><br><span class="line">Rebasing (3/4)</span><br><span class="line">error: could not apply 76ffe7e... Add handler <span class="built_in">test</span></span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">&quot;git add/rm &lt;conflicted_files&gt;&quot;</span>, <span class="keyword">then</span> run <span class="string">&quot;git rebase --continue&quot;</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">&quot;git rebase --skip&quot;</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">&quot;git rebase&quot;</span>, run <span class="string">&quot;git rebase --abort&quot;</span>.</span><br><span class="line">Could not apply 76ffe7e... Add handler <span class="built_in">test</span></span><br><span class="line">CONFLICT (modify/delete): pkg/handler/license.go deleted <span class="keyword">in</span> 76ffe7e (Add handler <span class="built_in">test</span>) and modified <span class="keyword">in</span> HEAD. Version HEAD of pkg/handler/license.go left <span class="keyword">in</span> tree.</span><br><span class="line">It is likely that your change has a merge conflict. You may resolve it</span><br><span class="line"><span class="keyword">in</span> the working tree now as described above and <span class="keyword">then</span> run <span class="string">&#x27;git review&#x27;</span></span><br><span class="line">again, or <span class="keyword">if</span> you <span class="keyword">do</span> not want to resolve it yet (note that the change</span><br><span class="line">can not merge until the conflict is resolved) you may run <span class="string">&#x27;git rebase</span></span><br><span class="line"><span class="string">--abort&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;git review -R&#x27;</span> to upload the change without rebasing.</span><br><span class="line"></span><br><span class="line">如果冲突文件在这次提交中无关紧要，可以直接移除，继续合并</span><br><span class="line">git add/rm &lt;conflicted_files&gt;</span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br></pre></td></tr></table></figure><p>添加远程地址:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add &lt;name&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><p>产生冲突，结果产生变基：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">先删除掉《冲突符号，然后git rebase —<span class="built_in">continue</span>然后再进行提交</span><br></pre></td></tr></table></figure><p>提交时如果产生如下问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-&gt; % git review   </span><br><span class="line">WARNING: Could not determine git version. Using modern git rebase</span><br><span class="line">flags.</span><br><span class="line">remote: </span><br><span class="line">remote: Processing changes: refs: 1, <span class="keyword">done</span>            </span><br><span class="line">To ssh://review.ustack.com:29418/devops/akali.git</span><br><span class="line"> ! [remote rejected] HEAD -&gt; refs/for/master%topic=init (no common ancestry)</span><br><span class="line">error: failed to push some refs to <span class="string">&#x27;ssh://review.ustack.com:29418/devops/akali.git&#x27;</span></span><br><span class="line"></span><br><span class="line">解决方案：</span><br><span class="line">git fetch</span><br><span class="line">git rebase origin/master</span><br><span class="line">然后再按产生冲突的方式解决</span><br><span class="line">此错误可能是没有拉取头分支导致其他分支找不到头分支无法被提交</span><br></pre></td></tr></table></figure><p>如果当前分支依赖上一个分支而不是主分支，而上一个分支被合并，可以将上个分支的提交drop在review</p><p>一直permission deny</p><p><a href="https://www.cnblogs.com/daibeisi/p/15662546.html">https://www.cnblogs.com/daibeisi/p/15662546.html</a></p><p><a href="https://stackoverflow.com/questions/25927914/git-error-please-make-sure-you-have-the-correct-access-rights-and-the-reposito">https://stackoverflow.com/questions/25927914/git-error-please-make-sure-you-have-the-correct-access-rights-and-the-reposito</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>goroutine&amp;channel</title>
      <link href="/2022/06/02/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/go_goroutine_channel/"/>
      <url>/2022/06/02/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go/go_goroutine_channel/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>应用程序通常需要</p><ol><li><strong>图形化界面异步</strong>执行一部分代码，以提升<strong>交互体验</strong></li><li>需要并发地执行以提升<strong>效率</strong></li><li>服务端并发处理连接，提升<strong>响应速度和qps</strong></li></ol><p>这些功能都是通过并发实现地，在<a href="https://so.csdn.net/so/search?q=Go%E8%AF%AD%E8%A8%80&spm=1001.2101.3001.7020">Go语言</a>中，每一个并发的执行单元叫作一个<strong>goroutine</strong>，可以暂时理解为Java地线程<strong>Thread</strong>。语法非常简单，就是在调用需要异步执行的方法前加上<strong>go</strong>关键字：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f()    <span class="comment">// call f(); 同步调用，等待返回</span></span><br><span class="line"><span class="keyword">go</span> f() <span class="comment">// 创建 goroutine调用f(); 不等待结果，当前goroutine继续执行下面地代码</span></span><br></pre></td></tr></table></figure><h1 id="1-goroutine"><a href="#1-goroutine" class="headerlink" title="1.goroutine"></a><strong><strong>1.goroutine</strong></strong></h1><h2 id="1-1-交互体验"><a href="#1-1-交互体验" class="headerlink" title="1.1 交互体验"></a><strong><strong>1.1 交互体验</strong></strong></h2><p>当程序在做复杂性高的工作，用户等待在那里得不到响应，用户体验非常差，所以我们通常看到有很多应用会展示进度条或者一朵菊花似的圈圈在那转（如图），以提示用户等待⌛️。</p><p>下面是一个最简单的样例，在执行<strong>fib</strong>斐波那契数列计算时，并发地打印等待的圈圈<strong>spinner。</strong>两个独立<strong>执行单元</strong>分别在独立的<strong>函数</strong>中，但两个函数会<strong>并发</strong>地执行（cpu多核的情况可以同时执行，非多核是两个单元轮流执行一个时间片）。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> spinner(<span class="number">100</span> * time.Millisecond)<span class="comment">// 并发执行函数spinner</span></span><br><span class="line"><span class="keyword">const</span> n = <span class="number">45</span></span><br><span class="line">fibN := fib(n) <span class="comment">// slow 递归深度大，执行效率低</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;\rFibonacci(%d) = %d\n&quot;</span>, n, fibN)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：一直旋转，直到fib返回 主函数main也执行结束，主函数返回时，所有的goroutine都会被直接打断，程序退出。除了从主函数退出或者直接终止程序之外，没有其它的编程方法能够让一个goroutine来打断另一个的执行，但可以通过goroutine之间的通信来让一个goroutine A 请goroutine B，并让goroutine B自行结束执行。</p><h2 id="1-2-服务端"><a href="#1-2-服务端" class="headerlink" title="1.2 服务端"></a><strong><strong>1.2 服务端</strong></strong></h2><p>一个TCP服务端如果只能同步执行，那一次只能处理一个请求，执行结果如下，第一个客户端连接，能后拿到响应；第二个客户端连接了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TCP 服务端</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">listener, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:8000&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">conn, err := listener.Accept()<span class="comment">// 监听连接，有连接进来返回一个连接</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Print(err) <span class="comment">// e.g., connection aborted</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line">handleConn(conn) <span class="comment">// 一次只能处理一个连接，一直等到这个函数返回，才能下个循环响应下一个连接</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回给客户端当前时间，死循环，一直不能退出</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleConn</span><span class="params">(c net.Conn)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> c.Close()</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">_, err := io.WriteString(c, time.Now().Format(<span class="string">&quot;15:04:05\n&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="comment">// e.g., client disconnected</span></span><br><span class="line">&#125;</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务端程序只需要做一点小改动，就能使其支持并发：在<strong>handleConn</strong>函数<strong>调用</strong>的地方增加<strong>go</strong>关键字，让每一次handleConn的调用都进入一个独立的goroutine。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">    conn, err := listener.Accept()</span><br><span class="line">    <span class="comment">// 省略错误处理</span></span><br><span class="line">    <span class="keyword">go</span> handleConn(conn) <span class="comment">// 并发地处理每个连接</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-Channels"><a href="#2-Channels" class="headerlink" title="2.Channels"></a><strong><strong>2.Channels</strong></strong></h1><p>channel是一个通信机制，它可以让goroutine A给另一个goroutine B发送信息。类似于Java的BlockQueue，通过线程间共享阻塞队列叨叨通过和传递数据的目的。</p><p>每个channel都有一个类型，也就是channel可发送数据的类型，类似于Java ArrayList<Integer>容器中的类型，如发送int类型数据的channel一般写为chan int。</p><p>channel有发送和接收两个主要操作，都是通信行为。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建</span></span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>) <span class="comment">// 定义一个传输int数据的channel，返回底层数据结构的引用</span></span><br><span class="line">ch = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>)    <span class="comment">// 无缓冲区</span></span><br><span class="line">ch = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">0</span>) <span class="comment">// 无缓冲区</span></span><br><span class="line">ch = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">int</span>, <span class="number">3</span>) <span class="comment">// 带大小为3的缓冲区</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line">ch &lt;- x  <span class="comment">// 发送x</span></span><br><span class="line">x = &lt;-ch <span class="comment">// 接收并赋值给x</span></span><br><span class="line">&lt;-ch     <span class="comment">// 接收并丢弃</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">close</span>(ch)</span><br></pre></td></tr></table></figure><p>goroutine A 将一个值通过channel<strong>发送</strong>到另一个<strong>执行接收操作</strong>的goroutine B。</p><p>发送和接收都使用**<code>&lt;-</code>**运算符，方向左，ch在左表示发送，ch在右表示接收。</p><table><thead><tr><th>操作</th><th>操作数顺序</th></tr></thead><tbody><tr><td>发送</td><td>ch &lt;- x(ch在左，箭头方向是把x发给ch中)</td></tr><tr><td>接收</td><td>x &#x3D; &lt;-ch(x在左，类似于赋值range接收)</td></tr><tr><td>关闭</td><td>close(ch)</td></tr></tbody></table><h2 id="2-0-最简易用法："><a href="#2-0-最简易用法：" class="headerlink" title="2.0 最简易用法："></a><strong><strong>2.0 最简易用法：</strong></strong></h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ch <span class="keyword">chan</span> <span class="type">string</span> = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>) <span class="comment">// ch has type &#x27;chan int&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, ch)</span><br><span class="line"><span class="keyword">go</span> receive()</span><br><span class="line">ch &lt;- <span class="string">&quot;send from main&quot;</span></span><br><span class="line"><span class="built_in">close</span>(ch)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// receive from channel</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">receive</span><span class="params">()</span></span>  &#123;</span><br><span class="line">x := &lt;-ch</span><br><span class="line">fmt.Println(<span class="string">&quot;rev:&quot;</span>+x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-1-无缓存channel-amp-同步"><a href="#2-1-无缓存channel-amp-同步" class="headerlink" title="2.1 无缓存channel &amp; 同步"></a><strong><strong>2.1 无缓存channel &amp; 同步</strong></strong></h2><p>一个基于无缓存Channels的发送操作将导致发送者goroutine阻塞，直到接收者goroutine在相同的Channels上执行接收操作，当发送的值通过Channels成功传输之后，两个goroutine可以继续执行后面的语句。类似于Java的1大小的BlockQueue。</p><p>由于发送和接收是阻塞的操作，可以通过channel进行同步。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">conn, err := net.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:8000&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatal(err)</span><br><span class="line">&#125;</span><br><span class="line">done := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;) <span class="comment">// 空类型的通道</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;<span class="comment">// 异步routine</span></span><br><span class="line">io.Copy(os.Stdout, conn) <span class="comment">// 打印服务端响应</span></span><br><span class="line">log.Println(<span class="string">&quot;done&quot;</span>)</span><br><span class="line">done &lt;- <span class="keyword">struct</span>&#123;&#125;&#123;&#125; <span class="comment">// 发送 </span></span><br><span class="line">&#125;()</span><br><span class="line">mustCopy(conn, os.Stdin)<span class="comment">// 发送请求到服务端</span></span><br><span class="line">conn.Close()</span><br><span class="line">&lt;-done <span class="comment">// 主线程阻塞在通道上等待异步routine发送完</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-串联的Channels（pipeline）"><a href="#2-2-串联的Channels（pipeline）" class="headerlink" title="2.2 串联的Channels（pipeline）"></a><strong><strong>2.2 串联的Channels（pipeline）</strong></strong></h2><p>对于pipeline管道可能很熟悉，shell中用于串联多个进程，而go中就是串联goroutine，</p><p><img src="/./imgs/20200522164430107.png"></p><p>当一个channel被关闭后，再向该channel发送数据将导致panic异常。当一个被关闭的channel中已经发送的数据都被成功接收后，<strong>后续的接收操作将不再阻塞</strong>，它们会立即返回一个零值。</p><p>没有办法直接测试一个channel是否被关闭，但是接收操作有一个变体形式：它多接收一个结果，<strong>多接收的第二个结果是一个布尔值ok</strong>，ture表示成功从channels接收到值，false表示channels已经被关闭并且里面没有值可接收。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x, ok := &lt;-naturals</span><br><span class="line"><span class="keyword">if</span> !ok &#123;</span><br><span class="line">    <span class="keyword">break</span> <span class="comment">//通道已经关闭了，接收不到值了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但上面的方式有点不方便，可以用<strong>range</strong>直接遍历</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x := <span class="keyword">range</span> naturals &#123;<span class="comment">// 依次从channel接收数据，当channel被关闭并且没有值可接收时跳出循环</span></span><br><span class="line">squares &lt;- x * x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与网络连接或者文件不同，不<strong>一定</strong>要关闭channel，只有需要<strong>signal</strong>接收者goroutine<strong>发送完毕</strong>时才需要关闭channel。</p><p>或者不管一个channel是否被关闭，当它<strong>没有被引用</strong>时将会被Go语言的垃圾自动回收器<strong>回收</strong>。</p><h2 id="2-3-单向channel"><a href="#2-3-单向channel" class="headerlink" title="2.3 单向channel"></a><strong><strong>2.3 单向channel</strong></strong></h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">out <span class="keyword">chan</span>&lt;- <span class="type">int</span>    <span class="comment">// 发送</span></span><br><span class="line">in &lt;-<span class="keyword">chan</span> <span class="type">int</span>    <span class="comment">// 接收</span></span><br></pre></td></tr></table></figure><p>隐式转换：任何双向channel向单向channel变量的赋值操作都将导致该隐式转换，可以隐式地从chan int转换成chan&lt;- int，也可以转换为&lt;-chan int。</p><p>这里并没有反向转换的语法：不能将一个chan&lt;- int或者 &lt;-channel int类型转换为chan int类型的双向型的channel。</p><h2 id="2-4-带缓存buffer的Channel"><a href="#2-4-带缓存buffer的Channel" class="headerlink" title="2.4 带缓存buffer的Channel"></a><strong>2.4 带缓存buffer的Channel</strong></h2><p>带缓存的<strong>Channel</strong>持有一个<strong>元素队列，类似于Java的BlockQueue，</strong>队列容量cap在调用make创建channel时第二个参数指定。</p><p>下面的语句创建了一个可以持有三个字符串元素的带缓存Channel。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ch = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">string</span>, <span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"><span class="built_in">cap</span>(ch) <span class="comment">// 获取容量</span></span><br><span class="line"><span class="built_in">len</span>(ch) <span class="comment">// 发送了多少个元素</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200522175435457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NhcmFmaW5hNTI3,size_16,color_FFFFFF,t_70"></p><p>发送就是入队，接收操作则是出队。</p><p>如果内部缓存队列是满的，发送将阻塞直到因另一个goroutine执行接收操作而释放了新空间。</p><p>相反，如果channel是空的，接收操作将阻塞直到有另一个goroutine执行发送操作而向队列插入元素。</p><p>那么channel的缓存队列将不是满的也不是空的，因此发送或接收操作都不会发生阻塞。这样就解耦了接收和发送的goroutine。</p><p>channel可以是多对多的，不一定是一对一的。</p><p>goroutines泄漏：当goroutines阻塞在channel上，泄漏的goroutines不会被自动回收，应确保不再需要的goroutine能正常退出是重要的。</p><h2 id="2-5-并发的循环"><a href="#2-5-并发的循环" class="headerlink" title="2.5 并发的循环"></a><strong><strong>2.5 并发的循环</strong></strong></h2><p>并发处理通常在循环中，并行处理类似的事情。与前面将函数闭包时一样，如果在循环中引用外部变量，存在快照问题，最终使用的是同一个变量，而不是枚举过程中不断迭代的变量。所以需要显式地定义局部变量，而不是直接使用外部变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> filenames &#123;</span><br><span class="line"><span class="comment">// 异步处理</span></span><br><span class="line"><span class="keyword">go</span> thumbnail.ImageFile(f) <span class="comment">// 闭包引用 外部变量 错误！！！</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> filenames &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(f <span class="type">string</span>)</span></span> &#123;<span class="comment">// 显式变量f，非闭包引用，否则变量快照问题</span></span><br><span class="line">thumbnail.ImageFile(f) </span><br><span class="line">&#125;(f)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-join等待"><a href="#2-6-join等待" class="headerlink" title="2.6 join等待"></a><strong><strong>2.6 join等待</strong></strong></h2><p>通常会需要主线程等待自线程执行完成后再退出，否则整个程序退出了，自线程没有处理完成。但是没有提供显式的方法完成这个功能，通常通过channel发送事件。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">makeThumbnails3</span><span class="params">(filenames []<span class="type">string</span>)</span></span> &#123;</span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">for</span> _, f := <span class="keyword">range</span> filenames &#123;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(f <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">thumbnail.ImageFile(f) </span><br><span class="line">ch &lt;- <span class="keyword">struct</span>&#123;&#125;&#123;&#125;<span class="comment">// 每个线程处理完才会发送信号</span></span><br><span class="line">&#125;(f)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 主线程等待所有子线程处理完成后，接收事件信号</span></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">range</span> filenames &#123;</span><br><span class="line">&lt;-ch</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-1计数sync-WaitGroup"><a href="#2-6-1计数sync-WaitGroup" class="headerlink" title="2.6.1计数sync.WaitGroup"></a><strong><strong>2.6.1计数sync.WaitGroup</strong></strong></h3><p>类似于countDownLatch的功能，WaitGroup通常用于等待一组线程执行完成，就是上一个例子中主线程等待子线程完成后退出的功能。</p><p><code>sync.WaitGroup</code>拥有一个内部计数器。当计数器等于<code>0</code>时，则<code>Wait()</code>方法会立即返回。否则它将阻塞执行<code>Wait()</code>方法的<code>goroutine</code>直到计数器等于<code>0</code>时为止。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> wg sync.WaitGroup <span class="comment">// number of working goroutines 工作线程数 类似于countdownlatch</span></span><br><span class="line"><span class="keyword">for</span> f := <span class="keyword">range</span> filenames &#123;</span><br><span class="line">wg.Add(<span class="number">1</span>)</span><br><span class="line"><span class="comment">// worker</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(f <span class="type">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> wg.Done()</span><br><span class="line">...</span><br><span class="line">&#125;(f)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 堵塞此goroutine，如果放在main之中，堵塞main goroutine</span></span><br><span class="line">    wg.Wait()</span><br><span class="line">    <span class="built_in">close</span>(sizes)</span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure><p>在启动一个线程时Add，一个线程退出时Done，最终用Wait等待其状态到0。</p><h3 id="2-6-2-chennel信号量"><a href="#2-6-2-chennel信号量" class="headerlink" title="2.6.2 chennel信号量"></a><strong><strong>2.6.2 chennel信号量</strong></strong></h3><p>无限制地新增线程并发处理，不一定可以提高效率，与计算机硬件有关；而且可能会耗尽更有限地资源，所以需要控制并发数量。就像Java地线程池指定大小来控制并发，go可以通过信号量来控制这一点，信号量也是通过channel来实现的。</p><p>channel也可以实现信号量，类似Java中的Samphore信号量，用一个有<strong>容量限制</strong>的<strong>buffered channel</strong>来控制并发，channel里的n个空槽代表n个可以处理内容的<strong>token</strong>(通行证)，只有先占了一个槽，线程才能继续执行。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tokens = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;, <span class="number">20</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">crawl</span><span class="params">(url <span class="type">string</span>)</span></span> []<span class="type">string</span> &#123;</span><br><span class="line">    tokens &lt;- <span class="keyword">struct</span>&#123;&#125;&#123;&#125; <span class="comment">// 获取信号量，发送到有缓冲的channel，如果满了，则阻塞等待</span></span><br><span class="line">    list, err := links.Extract(url)</span><br><span class="line">    &lt;-tokens <span class="comment">// 处理完成，释放信号量</span></span><br><span class="line">    <span class="keyword">return</span> list</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-select多路复用"><a href="#2-7-select多路复用" class="headerlink" title="2.7 select多路复用"></a><strong><strong>2.7 select多路复用</strong></strong></h2><p>类似于IO的select多路复用，用于线程监听多个io信号，处理多个io事件，减少io阻塞等待的事件，go中channel也有阻塞的情况，所以也就有了select多路复用的场景，以优化性能。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ch1:</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">case</span> x := &lt;-ch2:</span><br><span class="line">    <span class="comment">// ...use x...</span></span><br><span class="line"><span class="keyword">case</span> ch3 &lt;- y:</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>select会等待case中有能够执行的case时去执行。如case &lt;-ch1指ch1中可以接收数据，就会执行这个case 下的语句，如果没有的话会阻塞。当条件满足时，select才会去通信并执行case之后的语句；这时候其它case是不会执行的。当有多个case都满足时，随机选择一个case进行。</p><p>一个没有任何case的select语句写作select{}，会永远地等待下去。select还可以指定default子句，没有满足的case会执行default。</p><p>channel的零值是nil，对一个nil的channel<strong>发送和接收</strong>会永远<strong>阻塞</strong>，永远都不会被select到。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-abort:</span><br><span class="line">    fmt.Printf(<span class="string">&quot;Launch aborted!\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="comment">// do nothing</span></span><br></pre></td></tr></table></figure><h2 id="2-8-goroutine退出"><a href="#2-8-goroutine退出" class="headerlink" title="2.8 goroutine退出"></a><strong><strong>2.8 goroutine退出</strong></strong></h2><p>类似于Java中线程A调用B的中断方法将其中断位置位，线程B处理逻辑中检查其中断位并退出这样的设计才能实现一个线程停止另一个线程。go中可以定一个channel，线程A向channel发送中断信号，线程B在多路复用select从channel中接收中断信号，如果接收到了退出。</p><p>但是如果我们想要退出两个或者任意多个goroutine怎么办呢？一对多广播</p><p>关闭了一个channel并且被消费掉了所有已发送的值，接收操作会产生零值。我们可以将这个机制扩展一下，来作为我们的广播机制：不要向channel发送值，而是用关闭一个channel来进行广播</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">cancelled</span><span class="params">()</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    <span class="keyword">select</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> &lt;-done:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    os.Stdin.Read(<span class="built_in">make</span>([]<span class="type">byte</span>, <span class="number">1</span>)) <span class="comment">// read a single byte</span></span><br><span class="line">    <span class="built_in">close</span>(done)<span class="comment">// 关闭通道，实现广播，所有cancel方法进入第一个case，不再阻塞</span></span><br><span class="line">&#125;()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> gopl </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
